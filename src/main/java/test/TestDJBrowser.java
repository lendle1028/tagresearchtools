/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package test;

import chrriis.common.UIUtils;
import chrriis.dj.nativeswing.swtimpl.NativeInterface;
import chrriis.dj.nativeswing.swtimpl.components.JWebBrowser;
import java.io.InputStreamReader;
import java.io.Reader;
import java.io.UnsupportedEncodingException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.SwingUtilities;
import org.apache.commons.io.IOUtils;

/**
 *
 * @author lendle
 */
public class TestDJBrowser extends javax.swing.JFrame {

    private JWebBrowser webBrowser = null;

    /**
     * Creates new form TestDJBrowser
     */
    public TestDJBrowser() {
        initComponents();
        this.setSize(800, 600);
        webBrowser = new JWebBrowser();
        webBrowser.navigate("http://www.google.com");
        this.panelBrowser.add(webBrowser);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelBrowser = new javax.swing.JPanel();
        panelCopntrol = new javax.swing.JPanel();
        buttonSetupJavaScript = new javax.swing.JButton();
        buttonTestJavaScript = new javax.swing.JButton();
        buttonEnterSearch = new javax.swing.JButton();
        buttonRunQuery = new javax.swing.JButton();
        buttonGetSelectedPath = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        panelBrowser.setLayout(new java.awt.BorderLayout());
        getContentPane().add(panelBrowser, java.awt.BorderLayout.CENTER);

        panelCopntrol.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        buttonSetupJavaScript.setText("SetupJS");
        buttonSetupJavaScript.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSetupJavaScriptActionPerformed(evt);
            }
        });
        panelCopntrol.add(buttonSetupJavaScript);

        buttonTestJavaScript.setText("Setup Mouse");
        buttonTestJavaScript.setEnabled(false);
        buttonTestJavaScript.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonTestJavaScriptActionPerformed(evt);
            }
        });
        panelCopntrol.add(buttonTestJavaScript);

        buttonEnterSearch.setText("EnterSearch");
        buttonEnterSearch.setEnabled(false);
        buttonEnterSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonEnterSearchActionPerformed(evt);
            }
        });
        panelCopntrol.add(buttonEnterSearch);

        buttonRunQuery.setText("RunQuery");
        buttonRunQuery.setEnabled(false);
        buttonRunQuery.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonRunQueryActionPerformed(evt);
            }
        });
        panelCopntrol.add(buttonRunQuery);

        buttonGetSelectedPath.setText("GetPath");
        buttonGetSelectedPath.setEnabled(false);
        buttonGetSelectedPath.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonGetSelectedPathActionPerformed(evt);
            }
        });
        panelCopntrol.add(buttonGetSelectedPath);

        getContentPane().add(panelCopntrol, java.awt.BorderLayout.SOUTH);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonTestJavaScriptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonTestJavaScriptActionPerformed
        // TODO add your handling code here:
        try {
            this.executeJavaScript("elaborate/tag_analysis/oosm/tools/mapper/resources/setupMouseHover.js");
        } catch (Exception ex) {
            Logger.getLogger(TestDJBrowser.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_buttonTestJavaScriptActionPerformed

    private void buttonSetupJavaScriptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSetupJavaScriptActionPerformed
        try {
            // TODO add your handling code here:
            this.executeJavaScript("elaborate/tag_analysis/oosm/tools/mapper/resources/setupJQuery.js");
            final boolean[] continueLoop = new boolean[]{true};
            Thread t = new Thread() {
                public void run() {
                    while (continueLoop[0]) {
                        try {
                            Thread.sleep(100);
                        } catch (InterruptedException ex) {
                            Logger.getLogger(TestDJBrowser.class.getName()).log(Level.SEVERE, null, ex);
                        }
                        SwingUtilities.invokeLater(new Runnable() {

                            @Override
                            public void run() {
                                Boolean test = Boolean.valueOf("" + webBrowser.executeJavascriptWithResult("return typeof($)!=\"undefined\";"));
                                if (test) {
                                    //enable all buttons, and break
                                    TestDJBrowser.this.buttonTestJavaScript.setEnabled(true);
                                    TestDJBrowser.this.buttonEnterSearch.setEnabled(true);
                                    TestDJBrowser.this.buttonRunQuery.setEnabled(true);
                                    TestDJBrowser.this.buttonGetSelectedPath.setEnabled(true);
                                    continueLoop[0] = false;
                                }
                            }
                        });

                    }
                }
            };
            t.start();
        } catch (Exception ex) {
            Logger.getLogger(TestDJBrowser.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_buttonSetupJavaScriptActionPerformed

    private void buttonEnterSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonEnterSearchActionPerformed
        // TODO add your handling code here:
        try {
            // TODO add your handling code here:
            this.executeJavaScript("elaborate/tag_analysis/oosm/tools/mapper/resources/enterSearch.js");
        } catch (Exception ex) {
            Logger.getLogger(TestDJBrowser.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_buttonEnterSearchActionPerformed

    private void buttonRunQueryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonRunQueryActionPerformed
        // TODO add your handling code here:
        try {
            // TODO add your handling code here:
            this.executeJavaScript("elaborate/tag_analysis/oosm/tools/mapper/resources/runQuery.js");
        } catch (Exception ex) {
            Logger.getLogger(TestDJBrowser.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_buttonRunQueryActionPerformed

    private void buttonGetSelectedPathActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonGetSelectedPathActionPerformed
        // TODO add your handling code here:
        System.out.println(webBrowser.executeJavascriptWithResult("return $('#xpath').val();"));
    }//GEN-LAST:event_buttonGetSelectedPathActionPerformed

    private Object executeJavaScript(String resourceName) throws Exception {
        try (Reader reader = new InputStreamReader(this.getClass().getClassLoader().getResource(resourceName).openStream(), "utf-8")) {
            //webBrowser.executeJavascript("var s=document.createElement(\"script\");s.setAttribute('src', '//code.jquery.com/jquery-1.11.0.min.js');document.body.appendChild(s);");
            String script = IOUtils.toString(reader);
            return webBrowser.executeJavascriptWithResult(script);
        } catch (Exception ex) {
            Logger.getLogger(TestDJBrowser.class.getName()).log(Level.SEVERE, null, ex);
            throw ex;
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TestDJBrowser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TestDJBrowser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TestDJBrowser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TestDJBrowser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        UIUtils.setPreferredLookAndFeel();
        NativeInterface.open();
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TestDJBrowser().setVisible(true);
            }
        });
        NativeInterface.runEventPump();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonEnterSearch;
    private javax.swing.JButton buttonGetSelectedPath;
    private javax.swing.JButton buttonRunQuery;
    private javax.swing.JButton buttonSetupJavaScript;
    private javax.swing.JButton buttonTestJavaScript;
    private javax.swing.JPanel panelBrowser;
    private javax.swing.JPanel panelCopntrol;
    // End of variables declaration//GEN-END:variables
}
